name:          usb
version:       1.0
cabal-version: >=1.6
build-type:    Custom
license:       BSD3
license-file:  LICENSE
copyright:     2009â€“2011 Bas van Dijk <v.dijk.bas@gmail.com>
author:        Bas van Dijk <v.dijk.bas@gmail.com>
maintainer:    Bas van Dijk <v.dijk.bas@gmail.com>
bug-reports:   https://github.com/basvandijk/usb/issues
stability:     experimental
category:      System
synopsis:      Communicate with USB devices
description:   This library allows you to communicate with USB devices from
               userspace. It is implemented as a high-level wrapper around
               @bindings-libusb@ which is a low-level binding to the C library:
               @libusb-1.*@.
	       .
	       This documentation assumes knowledge of how to operate USB
	       devices from a software standpoint (descriptors, configurations,
	       interfaces, endpoints, control\/bulk\/interrupt\/isochronous
	       transfers, etc). Full information can be found in the USB 2.0
	       Specification.
	       .
	       For an example how to use this library see the @ls-usb@ package
	       at:
	       .
	       <http://hackage.haskell.org/package/ls-usb>
	       .
	       Also see the @usb-safe@ package which wraps this package and
	       provides some strong safety guarantees for working with USB
	       devices:
	       .
	       <http://hackage.haskell.org/package/usb-safe>
	       .
               Finally have a look at the @usb-enumerator@ package which
               provides iteratee enumerators for enumerating bulk and interrupt
               endpoints:
               .
               <http://hackage.haskell.org/package/usb-enumerator>
               .
	       Besides this API documentation the following sources might be
	       interesting:
	       .
	       * The libusb 1.0 documentation at:
	         <http://libusb.sourceforge.net/api-1.0/>
	       .
	       * The USB 2.0 specification at:
	         <http://www.usb.org/developers/docs/>
	       .
	       * The @bindings-libusb@ documentation at:
	         <http://hackage.haskell.org/package/bindings-libusb>
	       .
	       * \"USB in a NutShell\" at:
	         <http://www.beyondlogic.org/usbnutshell/usb1.htm>

extra-source-files: README.markdown, NEWS

source-repository head
  Type:     git
  Location: git://github.com/basvandijk/usb.git

flag library
  description: Build the library
  default:     True

flag example
  description: Build the example program
  default:     False

Library
  if !flag(library)
    buildable: False

  GHC-Options: -Wall

  build-depends: base                 >= 4     && < 4.4
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-libusb      >= 1.4.4 && < 1.5
               , bytestring           >= 0.9   && < 0.10
               , text                 >= 0.5   && < 0.12

  exposed-modules: System.USB
                   System.USB.Initialization
                   System.USB.Enumeration
                   System.USB.DeviceHandling
                   System.USB.Descriptors
                   System.USB.IO
                   System.USB.IO.Synchronous
                   System.USB.IO.StandardDeviceRequests
                   System.USB.Exceptions
                   System.USB.Unsafe
  other-modules: System.USB.Internal, Utils

  if impl(ghc>7) && !os(windows)
    cpp-options: -DHAS_EVENT_MANAGER
    exposed-modules: System.USB.IO.Asynchronous
    other-modules: EventManager, Poll, Timeval
    build-depends: containers >= 0.1 && < 0.5

executable example
  if !flag(example)
    buildable: False

  main-is: example.hs

  GHC-Options: -Wall -threaded

  build-depends: base                 >= 4     && < 4.4
               , base-unicode-symbols >= 0.1.1 && < 0.3
               , bindings-libusb      >= 1.4.4 && < 1.5
               , bytestring           >= 0.9   && < 0.10
               , text                 >= 0.5   && < 0.12

  other-modules: System.USB.Internal, Utils

  if impl(ghc>7) && !os(windows)
    cpp-options: -DHAS_EVENT_MANAGER
    other-modules: EventManager, Poll, Timeval
    build-depends: containers >= 0.1 && < 0.5
